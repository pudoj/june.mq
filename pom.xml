<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.judy.june</groupId>
    <artifactId>june.mq</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>june.mq</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <activemq.version>5.7.0</activemq.version>
        <rabbitmq.version>4.1.1</rabbitmq.version>
        <rocketmq.version>3.6.2.Final</rocketmq.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>${rabbitmq.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
            <version>1.7.3.RELEASE</version>
        </dependency>
<!--         <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>com.springsource.org.codehaus.jackson.mapper</artifactId>
            <version>1.4.3</version>
        </dependency> -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.9.13</version>
        </dependency>
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-core</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-all</artifactId>
            <version>5.14.4</version>
        </dependency> -->
        <dependency>
            <groupId>com.alibaba.rocketmq</groupId>
            <artifactId>rocketmq-client</artifactId>
            <version>${rocketmq.version}</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.rocketmq</groupId>
            <artifactId>rocketmq-all</artifactId>
            <version>${rocketmq.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!-- 编译 -->
            <plugin>  
                <groupId>org.apache.maven.plugins</groupId>  
                <!-- maven-compiler-plugin用来指定JDK版本和编码 -->  
                <artifactId>maven-compiler-plugin</artifactId>  
                <version>3.3</version>  
                <configuration>  
                    <!-- 编译器的版本设定为1.7,应该指的是jdk，默认是用的1.3，版本太老 -->  
                    <source>1.8</source><!-- 源代码使用的开发版本 -->  
                    <target>1.8</target><!-- 需要生成的目标class文件的编译版本 -->  
                     <!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->  
                    <encoding>UTF-8</encoding>  
                </configuration>  
            </plugin> 
            <plugin>  
                <!-- maven-war-plugin进行打包 -->  
                <artifactId>maven-war-plugin</artifactId>  
                <version>3.1.0</version>  
                <configuration>
                    <!-- 包含空文件夹，指的是maven编译打包的时候会将空文件夹也编译打包进去，该参数2.4版本后才能使用 -->    
                    <includeEmptyDirectories>true</includeEmptyDirectories>  
                    <!-- war包的名字 -->  
                    <warName>june.mq</warName>  
                    <webResources>  
                        <resource>  
                            <!-- ${package.environment}就是profile中的配置文件路径 -->  
                            <directory>${project.basedir}/src/main/webapp</directory>  
                            <targetPath>WEB-INF/classes</targetPath>  
                            <filtering>true</filtering>  
                        </resource>  
                    </webResources>  
                </configuration>  
            </plugin> 
        </plugins>
    </build>
</project>
